% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calculate_kinetics.R
\name{calculate_kinetics}
\alias{calculate_kinetics}
\title{calculate_kinetics}
\usage{
calculate_kinetics(dat, protein = dat[["Protein"]][1], sequence, state,
  start, end, time_in, time_out)
}
\arguments{
\item{dat}{data frame with data from Dynamix file}

\item{protein}{protein value for chosen peptide}

\item{sequence}{sequence of the peptide for which the kinetics is calculated}

\item{state}{state of given sequence}

\item{start}{end of given sequence}

\item{end}{end of given sequence}

\item{time_in}{time in for experimental calculations}

\item{time_out}{time out for experimental calculations}
}
\value{
data frame with deuteration calculated for all the data points between time_in and time_out. 
Chosen time point for which deuteration in all four variants is calculated is available in column `time_chosen`. The rest of
the returned structure is equivalent to structure returned by calculate_state_deuteration.
}
\description{
Calculate kinetics - deuteration change in time for given peptide.
}
\details{
First version doesn't support filled Modification and Fragment.
}
\examples{
# load example data
dat <- read_hdx(system.file(package = "HaDeX", "HaDeX/data/KD_180110_CD160_HVEM.csv"))

# calculate data for sequence INITSSASQEGTRLN in state CD160
(kin1 <- calculate_kinetics(dat, 
                   protein = "db_CD160",
                   sequence = "INITSSASQEGTRLN", 
                   state = "CD160",
                   start = 1, 
                   end = 15,
                   time_in = 0.001, 
                   time_out = 1440))
                   
# calculate data for sequence INITSSASQEGTRLN in state CD160_HVEM
(kin2 <- calculate_kinetics(dat, 
                   protein = "db_CD160",
                   sequence = "INITSSASQEGTRLN", 
                   state = "CD160_HVEM",
                   start = 1, 
                   end = 15,
                   time_in = 0.001, 
                   time_out = 1440))
                   
# load extra libraries
library(dplyr)

# plot data together 
bind_rows(kin1, kin2) \%>\% 
 ggplot(aes(x = time_chosen, y = frac_exch_state, group = State)) +
 geom_point() + 
 geom_line(aes(color = State)) +
 labs(title = "Kinetic plot for INITSSASQEGTRLN", 
      x = "Time point [min]", 
      y = "Deuteration") +
 coord_cartesian(ylim = c(0, 1)) +
 theme(legend.position = "bottom",
       legend.title = element_blank())
       
}
\seealso{
calculate_state_deuteration
}
